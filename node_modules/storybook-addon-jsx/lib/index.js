"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.jsxDecorator = void 0;

var _react = _interopRequireDefault(require("react"));

var _addons = require("@storybook/addons");

var _reactElementToJsxString = _interopRequireDefault(require("react-element-to-jsx-string"));

var _jsBeautify = require("js-beautify");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var applyBeforeRender = function applyBeforeRender(domString, options) {
  if (typeof options.onBeforeRender !== 'function') {
    return domString;
  }

  return options.onBeforeRender(domString);
};

var renderJsx = function renderJsx(code, options) {
  for (var i = 0; i < options.skip; i++) {
    if (typeof code === 'undefined') {
      console.warn('Cannot skip undefined element');
      return;
    }

    if (_react.default.Children.count(code) > 1) {
      console.warn('Trying to skip an array of elements');
      return;
    }

    if (typeof code.props.children === 'undefined') {
      console.warn('Not enough children to skip elements.');

      if (typeof code.type === 'function' && code.type.name === '') {
        code = code.type(code.props);
      }
    } else {
      if (typeof code.props.children === 'function') {
        code = code.props.children();
      } else {
        code = code.props.children;
      }
    }
  }

  if (typeof code === 'undefined') {
    return console.warn('Too many skip or undefined component');
  }

  while (typeof code.type === 'function' && code.type.name === '') {
    code = code.type(code.props);
  }

  var ooo = typeof options.displayName === 'string' ? _objectSpread({}, options, {
    showFunctions: true,
    displayName: function displayName() {
      return options.displayName;
    }
  }) : options;
  return _react.default.Children.map(code, function (c) {
    return applyBeforeRender((0, _reactElementToJsxString.default)(c, ooo), options);
  }).join('\n');
};

var jsxDecorator = function jsxDecorator(storyFn, parameters) {
  var defaultOpts = {
    skip: 0,
    showFunctions: true,
    enableBeautify: true
  };

  var options = _objectSpread({}, defaultOpts, parameters.parameters && parameters.parameters.jsx || {});

  var channel = _addons.addons.getChannel();

  var story = storyFn();
  var jsx = '';

  if (story.template) {
    if (options.enableBeautify) {
      jsx = (0, _jsBeautify.html)(story.template, options);
    } else {
      jsx = story.template;
    }
  } else {
    var rendered = renderJsx(story, options);

    if (rendered) {
      jsx = rendered;
    }
  }

  channel.emit(_constants.EVENTS.ADD_JSX, parameters.id, jsx);
  return _react.default.createElement(_react.default.Fragment, null, story);
};

exports.jsxDecorator = jsxDecorator;
var _default = {
  addWithJSX: function addWithJSX(kind, storyFn) {
    // @ts-ignore
    return this.add(kind, function (context) {
      return jsxDecorator(storyFn, context);
    });
  }
};
exports.default = _default;